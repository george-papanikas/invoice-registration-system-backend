plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.github.george-papanikas'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// JWT
	implementation("io.jsonwebtoken:jjwt-api:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

	// Springdoc OpenAPI UI
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6"

	runtimeOnly("com.h2database:h2:2.3.232")
	runtimeOnly 'com.mysql:mysql-connector-j'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
	useJUnitPlatform()  // for JUnit 5
	reports {
		// enable JUnit XML output for CI servers
		junitXml.required.set(true)
		// enable the HTML report you can open in your browser
		html.required.set(true)
	}
}

tasks.named('test', Test) {
	useJUnitPlatform()
}

/**
 * Configure the Javadoc task to use UTF-8
 * and avoid Windows-1252 encoding errors.
 */
tasks.javadoc {
	options.encoding    = 'UTF-8'
	options.charSet     = 'UTF-8'
	options.docEncoding = 'UTF-8'
	// if you hit strict doclint errors, you can disable them:
	// options.addStringOption('Xdoclint:none', '-quiet')
}
